<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - 分类 - 张昭的Blog</title>
        <link>http://gitzhangzhao.github.io/categories/linux/</link>
        <description>Linux - 分类 - 张昭的Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>gitzhangzhao@gmail.com (张昭)</managingEditor>
            <webMaster>gitzhangzhao@gmail.com (张昭)</webMaster><lastBuildDate>Sun, 18 Jun 2023 23:54:08 &#43;0800</lastBuildDate><atom:link href="http://gitzhangzhao.github.io/categories/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Gentoo安装小记</title>
    <link>http://gitzhangzhao.github.io/posts/gentoo/gentoo%E5%AE%89%E8%A3%85%E5%B0%8F%E8%AE%B0/</link>
    <pubDate>Sun, 18 Jun 2023 23:54:08 &#43;0800</pubDate><author>gitzhangzhao@gmail.com (张昭)</author><guid>http://gitzhangzhao.github.io/posts/gentoo/gentoo%E5%AE%89%E8%A3%85%E5%B0%8F%E8%AE%B0/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>安装Gentoo并不复杂，很多人混淆了复杂和耗时。在安装的过程中，大部分的时间都在做别的事情。同时，Gentoo的安装步骤是清晰的，Handbook和各路神仙的总结实际上已经很全面了。因此，没有必要再做重复的劳动，一些个性化的关键点记录就足够了。</p>
</blockquote>
<blockquote>
<p>为了使系统保持Suckless，尽量避免用不到的功能，我还是继续沿用裸wm的方式。简而言之：gentoo + openrc + i3wm + polybar + nvim。我的目标是尽量在一天内完成系统的整体安装，再用一周时间进行小修小补。而在流程化的步骤下，一天内的实际安装时间在1小时左右，而其余时间都在做其他事情。</p>
</blockquote>
<blockquote>
<p>此外，对于小新pro这种散热垃圾的Laptop，一个带风扇的散热架是必要的。否则，<code>emerge -e @world</code> 是真的会卡死（哭）。</p>
</blockquote>
<h2 id="安装步骤">安装步骤</h2>
<p>Gentoo的安装大体上是规范的，但是针对不同用户的需求和理念，也有不一样的方式。或多或少的，存在一些坑</p>
<p>我在安装过程主要参考的几个链接：</p>
<ol>
<li>官方Handbook，这是最权威的手册，当问题不确定时，以Handbook为准</li>
</ol>
<p><a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/zh-cn" target="_blank" rel="noopener noreffer">Handbook</a></p>
<ol start="2">
<li>一篇较为详细的安装笔记，属于经验丰富的老玩家心得了，很有参考价值</li>
</ol>
<p><a href="https://zhuanlan.zhihu.com/p/122222365" target="_blank" rel="noopener noreffer">Gentoo安装流程分享(step by step)，第一篇之基本系统的安装</a></p>
<ol start="3">
<li>OriPoin&rsquo;s blog，详细介绍了Gentoo的优化方式，但是没必要采用O3，会带来很多未知问题</li>
</ol>
<p><a href="https://blog.oripoin.me/2022/04/emerge-your-world-the-lean-way/" target="_blank" rel="noopener noreffer">Emerge your world the lean way</a></p>
<p><a href="https://blog.oripoin.me/2022/04/optimize-your-system-the-stupid-way/" target="_blank" rel="noopener noreffer">Optimize Your system the stupid way</a></p>
<ol start="4">
<li>bitbili&rsquo;s blog，非常非常详细的介绍了Gentoo的安装和使用</li>
</ol>
<p><a href="https://bitbili.net/gentoo-linux-installation-and-usage-tutorial.html" target="_blank" rel="noopener noreffer">Gentoo Linux 安装及使用指南</a></p>
<ol start="5">
<li>Yangmame的安装教程</li>
</ol>
<p><a href="https://blog.yangmame.org/Gentoo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener noreffer">Gentoo安装教程</a></p>
<ol start="6">
<li>ayamir的知乎记录</li>
</ol>
<p><a href="https://zhuanlan.zhihu.com/p/166652475" target="_blank" rel="noopener noreffer">2020-Gentoo双系统安装指北</a></p>
<ol start="6">
<li>Google，Stack Overflow，gentoo wiki，arch wiki等</li>
</ol>
<h2 id="makeconf">make.conf</h2>
<p>make.conf可以说是Gentoo的核心了，针对PC的配置、优化以及对系统的预期基本上都是在这个文件中定义的，首先列出我的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> # These settings were set by the catalyst build script that automatically
</span></span><span class="line"><span class="cl"> # built this stage.
</span></span><span class="line"><span class="cl"> # Please consult /usr/share/portage/config/make.conf.example for a more
</span></span><span class="line"><span class="cl"> # detailed example.
</span></span><span class="line"><span class="cl"> COMMON_FLAGS=&#34;-march=native -O2 -pipe&#34;
</span></span><span class="line"><span class="cl"> CFLAGS=&#34;${COMMON_FLAGS}&#34;
</span></span><span class="line"><span class="cl"> CXXFLAGS=&#34;${COMMON_FLAGS}&#34;
</span></span><span class="line"><span class="cl"> FCFLAGS=&#34;${COMMON_FLAGS}&#34;
</span></span><span class="line"><span class="cl"> FFLAGS=&#34;${COMMON_FLAGS}&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> USE=&#34;X elogind mount cjk i3wm mpd network pulseaudio ipc opengl dbus -gnome -kde&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> MAKEOPTS=&#34;-j6&#34;
</span></span><span class="line"><span class="cl"> LC_MESSAGES=C
</span></span><span class="line"><span class="cl"> EMERGE_DEFAULT_OPTS=&#34;--ask --verbose --load-average --newuse --with-bdeps=y --keep-going --deep&#34;
</span></span><span class="line"><span class="cl"> CPU_FLAGS_X86=&#34;aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt rdrand sse sse2 sse3 sse4_1 sse4_2 ssse3&#34;
</span></span><span class="line"><span class="cl"> AUTO_CLEAN=&#34;yes&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> PORTDIR=&#34;/var/db/repos/gentoo&#34;
</span></span><span class="line"><span class="cl"> DISTDIR=&#34;/var/cache/distfiles&#34;
</span></span><span class="line"><span class="cl"> PKGDIR=&#34;/var/chache/binpkgs&#34;
</span></span><span class="line"><span class="cl"> PORTAGE_TMPDIR=&#34;/tmp&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> PORTAGE_COMPRESS=&#34;zstd&#34;
</span></span><span class="line"><span class="cl"> BINPKG_COMPRESS=&#34;zstd&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> ACCEPT_LICENSE=&#34;*&#34;
</span></span><span class="line"><span class="cl"> ACCEPT_KEYWORDS=&#34;~amd64&#34;
</span></span><span class="line"><span class="cl"> GRUB_PLATFORMS=&#34;efi-64&#34;
</span></span><span class="line"><span class="cl"> VIDEO_CARDS=&#34;nouveau&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> GENTOO_MIRRORS=&#34;https://mirrors.tuna.tsinghua.edu.cn/gentoo&#34;
</span></span><span class="line"><span class="cl"> MICROCODE_SIGNATURES=&#34;-S&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> # NOTE: This stage was built with the bindist Use flag enabled
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> # This sets the language of build output to English.
</span></span><span class="line"><span class="cl"> # Please keep this setting intact when reporting bugs.
</span></span><span class="line"><span class="cl"> LC_MESSAGES=C.utf8
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> # ccache
</span></span><span class="line"><span class="cl"> FEATURES=&#34;ccache -test&#34;
</span></span><span class="line"><span class="cl"> CCACHE_DIR=&#34;/var/cache/ccache&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> # aria2
</span></span><span class="line"><span class="cl"> FETCHCOMMAND=&#34;/usr/bin/aria2c -d \${DISTDIR} -o \${FILE} --allow-overwrite=true --max-tries=5 --max-file-not-found=2 --max-concurrent-downloads=5 --connect-timeout=5 --timeout=5 --split=5 --min-split-size=2M --lowest-speed-limit=20K --max-connection-per-server=9 --uri-selector=feedback \${URI}&#34;
</span></span><span class="line"><span class="cl"> RESUMECOMMAND=&#34;${FETCHCOMMAND}&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="问题列举">问题列举</h2>
<ul>
<li>Gentoo默认是复杂密码，为了便于日常使用，改为简单密码：
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/etc/security/passwdqc.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">min=8,8,8,8,8
</span></span><span class="line"><span class="cl">max=40
</span></span><span class="line"><span class="cl">passphrase=0
</span></span><span class="line"><span class="cl">match=4
</span></span><span class="line"><span class="cl">similar=permit
</span></span><span class="line"><span class="cl">random=24
</span></span><span class="line"><span class="cl">enforce=none
</span></span><span class="line"><span class="cl">retry=3
</span></span></code></pre></td></tr></table>
</div>
</div>或者全局USE -pam，我还没有尝试</li>
</ul>
<h4 id="eudev还是systemd-utils">eudev还是systemd-utils？</h4>
<p>Gentoo目前用systemd-utils替代了原本的eudev，所以解决办法有：</p>
<ol>
<li>使用systemd-utils管理设备，不要再安装eudev，这是最简单的。官方的原话是：<code>in general, you should not worry about installing anything *udev manually by yourself and you should imho not have anything like that in your world file.</code></li>
<li>如果你痛恨和systemd有关的一切，可以为systemd-utils包-udev USE，然后应该就可以安装eudev了。需要注意的是，eudev不应该被加入到world file中。此外还有一些其他的USE也会影响，总之这很麻烦。建议还是不要折腾了，systemd-utils只是从systemd中分离出来的组件而已，它包含了udev</li>
</ol>
<h4 id="desktop-profiles">Desktop profiles？</h4>
<p>Desktop profiles预设了很多USE，并包含了一些system依赖。对于KDE和GNOME用户，Desktop profiles中提供的增量可以省很多事。但是对于裸WM来说，没有必要为使用Desktop，默认的profiles或者systemd profiles就可以了。在最小化的基础上，安装软件时检查USE并逐步添加自己的全局USE</p>
]]></description>
</item>
</channel>
</rss>
